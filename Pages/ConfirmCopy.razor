@using SCDFrontend.Models
@using SCDFrontend.DataAccess
@inject IToastService toastService

<div>
    <p>Copy of: @Copy.oldName</p>
    <p>Copy name: @Copy.newName</p>
    <p>Copy method: @Copy.copyMethod</p>
    <p>Client: @Copy.client?.name</p>
    <p>Subscription: @Copy.subscription?.name</p>
    <button @onclick="CreateCopy" class="btn btn-primary">Create copy</button>
    <button @onclick="Cancel" class="btn btn-secondary">Change data</button>
</div>

@code {
    private ApiConnector apicon = new ApiConnector();
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter] public CopyInst Copy { get; set; }

    async Task CreateCopy()
    {
        await BlazoredModal.Close(ModalResult.Ok(true));
        toastService.ShowInfo("Creating copy");
        var res = await apicon.CreateCopy(Copy);
        if(res.IsSuccessStatusCode)
        {
            toastService.ShowSuccess("Done");
        }
        else 
        {
            toastService.ShowError("Could not copy. Bitch!");
        }
    }

    void Cancel() => BlazoredModal.Cancel();
}