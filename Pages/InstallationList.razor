@using SCDFrontend.Models;
@using SCDFrontend.DataAccess;
@using System.Net.Http
@using Newtonsoft.Json.Linq
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop
@using System.ComponentModel;
@inject NavigationManager NavigationManager;
@inject HttpClient Http;

<tbody>
    @foreach (Installation inst in Installations)
    {
        <tr @onclick="@(() => Navigate(inst.name.ToString()))">
            <td>@inst.name</td>
            <td>@inst.subscription?.name</td>
            <td>@inst.copyMethod</td>
            <td>@inst.client.name</td>
        </tr>           
    }
</tbody>

@code 
{
    [Parameter]
    public List<Installation> AllInstallations { get; set; }

    [Parameter]
    public string sub { get; set; }

    public string subNamePretty { get; set; }

    public List<Installation> Installations { get; set; }
    
    private void Navigate(string name)
    {

        NavigationManager.NavigateTo("/inst/" + name);
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("sub");
        Installations = new List<Installation>();
        if(sub.Equals("All Installations"))
        {
            Console.WriteLine(sub);
            Installations = AllInstallations;
            Console.WriteLine(AllInstallations.Count);
        }
        else 
        {
            Console.WriteLine(AllInstallations.Count);
            subNamePretty = sub.Replace("-", " ");
            foreach(var inst in AllInstallations)
            {
                if(inst.subscription.name.Equals(subNamePretty))
                {
                    Installations.Add(inst);
                }
            }
        }
        
    }

    protected override bool ShouldRender()
    {
        if(string.IsNullOrEmpty(sub) || sub.Equals("All Installations"))
        {
            sub = "All Installations";
            Installations = AllInstallations;
        }
        else
        {
        subNamePretty = sub.Replace("-", " ");
        Installations = new List<Installation>();
        foreach(var i in AllInstallations)
        {
            if(i.subscription.name.Equals(subNamePretty))
            {
                Installations.Add(i);
            }
        }
        }
        Console.WriteLine("ShouldRender InstallationList");
        return true;
    }
}